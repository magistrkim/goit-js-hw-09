{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAcC,SAASC,cAAc,SACrCC,EAAeF,SAASC,cAAc,uBACtCE,EAAcH,SAASC,cAAc,sBACrCG,EAAgBJ,SAASC,cAAc,wBACvCI,EAAiBL,SAASC,cAAc,UAExCK,EAAgB,KAIb,C,gBAHiBC,OAAOL,EAAaM,O,UAC1BD,OAAOJ,EAAYK,O,YACjBD,OAAOH,EAAcI,SAIrCC,EAAgB,CAACC,EAAUC,IACxB,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,IA8Bb,IAAIO,GAAmB,EAEvB,MAAMC,EAAoB,KACxB,MAAMC,gBAAEA,EAAeC,UAAEA,EAASC,YAAEA,GAAgBhB,IAChDc,EAAkB,GAAKC,EAAY,GAAKC,EAAc,EACnDJ,IACHb,EAAekB,aAAa,WAAY,IACxC1B,EAAA2B,OAAOC,QAAQ,8BACfP,GAAmB,IAGrBb,EAAeqB,gBAAgB,YAC/BR,GAAmB,E,EAIvBnB,EAAY4B,iBAAiB,UA1CAC,IAC3BA,EAAMC,iBACN,MAAMT,gBAAEA,EAAeC,UAAEA,EAASC,YAAEA,GAAgBhB,IACpDD,EAAekB,aAAa,WAAY,IAExC,IAAIO,EAAe,GACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIT,EAAaS,GAAK,EAAG,CACvC,MAAMpB,EAAQS,EAAkBC,EAAYU,EAC5CD,EAAeA,EAAaE,OAAOvB,EAAcsB,EAAGpB,G,CAGtDmB,EAAaG,SAAQC,IACnBA,EACGC,MAAKC,IACJvC,EAAA2B,OAAOa,QACL,uBAAqBD,EAAI1B,eAAkB0B,EAAEzB,UAAa,IAG7D2B,OAAMF,IACLvC,EAAA2B,OAAOe,QACL,sBAAoBH,EAAE1B,eAAkB0B,EAAEzB,UAAa,GAEzD,GACJ,IAoBJT,EAAayB,iBAAiB,QAASR,GACvChB,EAAYwB,iBAAiB,QAASR,GACtCf,EAAcuB,iBAAiB,QAASR","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formElement = document.querySelector('.form');\nconst delayElement = document.querySelector('input[name=\"delay\"]');\nconst stepElement = document.querySelector('input[name=\"step\"]');\nconst amountElement = document.querySelector('input[name=\"amount\"]');\nconst createButtonEl = document.querySelector('button');\n\nconst getFormValues = () => {\n  const firstDelayValue = Number(delayElement.value);\n  const stepValue = Number(stepElement.value);\n  const amountValue = Number(amountElement.value);\n  return { firstDelayValue, stepValue, amountValue };\n};\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\nconst handleSubmitBtnClick = event => {\n  event.preventDefault();\n  const { firstDelayValue, stepValue, amountValue } = getFormValues();\n  createButtonEl.setAttribute('disabled', '');\n\n  let promiseArray = [];\n  for (let i = 0; i < amountValue; i += 1) {\n    const delay = firstDelayValue + stepValue * i;\n    promiseArray = promiseArray.concat(createPromise(i, delay));\n  }\n\n  promiseArray.forEach(promise => {\n    promise\n      .then(data => {\n        Notify.success(\n          `✅ Fulfilled promise ${data.position} in ${data.delay}ms`\n        );\n      })\n      .catch(data => {\n        Notify.failure(\n          `❌ Rejected promise ${data.position} in ${data.delay}ms`\n        );\n      });\n  });\n};\n\nlet warningDisplayed = false;\n\nconst handleInputChange = () => {\n  const { firstDelayValue, stepValue, amountValue } = getFormValues();\n  if (firstDelayValue < 0 || stepValue < 0 || amountValue < 0) {\n    if (!warningDisplayed) {\n      createButtonEl.setAttribute('disabled', '');\n      Notify.warning('Please choose valid value!');\n      warningDisplayed = true;\n    }\n  } else {\n    createButtonEl.removeAttribute('disabled');\n    warningDisplayed = false;\n  }\n};\n\nformElement.addEventListener('submit', handleSubmitBtnClick);\ndelayElement.addEventListener('input', handleInputChange);\nstepElement.addEventListener('input', handleInputChange);\namountElement.addEventListener('input', handleInputChange);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formElement","document","querySelector","$47d4ff9957288465$var$delayElement","$47d4ff9957288465$var$stepElement","$47d4ff9957288465$var$amountElement","$47d4ff9957288465$var$createButtonEl","$47d4ff9957288465$var$getFormValues","Number","value","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$warningDisplayed","$47d4ff9957288465$var$handleInputChange","firstDelayValue","stepValue","amountValue","setAttribute","Notify","warning","removeAttribute","addEventListener","event","preventDefault","promiseArray","i","concat","forEach","promise","then","data","success","catch","failure"],"version":3,"file":"03-promises.f43925d0.js.map"}